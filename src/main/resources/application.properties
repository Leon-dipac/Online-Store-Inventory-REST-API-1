                ##          Configuring MySQL Database :

spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# Since we’re using MySQL as our database, we need to configure the database URL, username, and password
# so that Spring can establish a connection with the database on startup.
# Open src/main/resources/application.properties file and add the following properties to it:

spring.datasource.url = jdbc:mysql://localhost:3306/store_inventory_1
spring.datasource.username = root
spring.datasource.password = southafrica


                ##       Hibernate Properties :


# The SQL dialect makes Hibernate generate better SQL for the chosen database :
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
server.port = 9191

# Hibernate ddl auto (create, create-drop, validate, update)
# You don’t need to create any tables. The tables will automatically be created by hibernate from
# the User entity that we will define in the next step. This is made possible by the property:
spring.jpa.hibernate.ddl-auto = update


spring.jpa.show-sql = true



